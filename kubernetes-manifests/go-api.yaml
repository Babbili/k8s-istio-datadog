apiVersion: v1
kind: Namespace
metadata:
  name: apps

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: goapi
    tags.datadoghq.com/env: prod
    tags.datadoghq.com/service: goapi
    tags.datadoghq.com/version: v1
  name: goapi
  namespace: apps
spec:
  selector:
    matchLabels:
      app: goapi
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: goapi
        tags.datadoghq.com/env: prod
        tags.datadoghq.com/service: goapi
        tags.datadoghq.com/version: v1
      annotations:
        ad.datadoghq.com/goapi.logs: >-
          [{
            "source": "go",
            "service": "goapi"
          }]
    spec:
      securityContext:
        runAsUser: 1000
        runAsNonRoot: true
        runAsGroup: 3000
        fsGroup: 2000
      volumes:
        - hostPath:
            path: /var/run/datadog/
          name: apmsocketpath
      containers:
        - name: goapi
          image: babbili/go-books-api:b878944c8
          imagePullPolicy : Always       
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
            privileged: false
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
          ports:
          - containerPort: 50051
          readinessProbe:
            httpGet:
              path: /healthz
              port: 50051
            initialDelaySeconds: 3
            periodSeconds: 4
            failureThreshold: 8
          livenessProbe:
            httpGet:
              path: /healthz
              port: 50051
            initialDelaySeconds: 3
            periodSeconds: 8
            failureThreshold: 16
          volumeMounts:
            - name: apmsocketpath
              mountPath: /var/run/datadog
          env:
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']      
      serviceAccount: goapi
      serviceAccountName: goapi

---

apiVersion: v1
kind: Service
metadata:
  name: goapi
  namespace: apps
  labels:
    app: goapi
spec:
  type: ClusterIP
  selector:
    app: goapi
  ports:
    - name: http
      port: 80
      targetPort: 50051
      protocol: TCP

---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: goapi
  name: goapi
  namespace: apps

---

apiVersion: v1
kind: Secret
metadata:
  name: goapi-svca-token
  namespace: apps
  annotations:
    kubernetes.io/service-account.name: "goapi"
type: kubernetes.io/service-account-token
